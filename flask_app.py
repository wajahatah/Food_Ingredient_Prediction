# -*- coding: utf-8 -*-
"""Flask_app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16fWZ6es_mGVO8D_14GMkA8Gv8cug1mwd
"""

# Uncomment following line if running code on colab
# !pip install flask
import os
# To mount the drive
# from google.colab import drive
# drive.mount('/content/drive')

# Run the pridiction file
# %run drive/MyDrive/Colab_Notebooks/pridiction.ipynb
# %run C:\Users\a\Downloads\pridiction.ipynb

# Import libraries
from flask import Flask, request, jsonify
import tensorflow as tf

from pridiction import predict_class
# import keras

# Commented out IPython magic to ensure Python compatibility.
# %run C://Users//hp//Documents//IngreeScanModule//module//pridiction.ipynb

app = Flask(__name__)
from tensorflow.keras.models import load_model
model_path = r"C://Users//hp//Documents//IngreeScanModule//module//Ingre_scan.h5"
loaded_model = tf.keras.models.load_model(model_path)

# to route the model
@app.route('/predict', methods=['POST'])
def predict():
    try:
        # Get the image URL from the request
         image = request.files.get("image")
         filename = image.filename
            # save the file to a folder named 'uploads'
         file_path = os.path.join('uploads', filename)
         print(image.filename)
         image.save(file_path)
            # now you have the full path of the uploaded file
         full_path = os.path.abspath(file_path)
            # do something with the full path
         print("full path",full_path)
        # you can process the image file here
         image_file_path = image.filename
        #  image_url = request.json.get('image_url')
         print("image url:",image_file_path)
        # Make predictions using the function from the notebook
         predicted_class = predict_class(full_path, loaded_model)

        # Return the predicted class as JSON
         return jsonify({'predicted_class': predicted_class})
    except Exception as e:
        return jsonify({'error': str(e)})

if __name__ == '__main__':
    # app.run(debug=True)
    app.run()

